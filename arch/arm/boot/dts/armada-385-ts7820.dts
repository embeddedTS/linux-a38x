/*
 * Device Tree file for Technologic Systems TS-7820
 *
 *  Copyright (C) 2017 Technologic Systems
 *
 * Mark Featherston <mark@embeddedarm.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is licensed under the terms of the GNU General Public
 *     License version 2.  This program is licensed "as is" without
 *     any warranty of any kind, whether express or implied.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "armada-385.dtsi"

#include <dt-bindings/gpio/gpio.h>

/ {
	model = "Technologic Systems TS-7820";
	compatible = "technologic,a385-ts7820", "marvell,armada385", "marvell,armada380";

	aliases {
		/* So that mvebu u-boot can update the MAC addresses */
		ethernet1 = &eth0;
		ethernet2 = &eth1;
		ethernet3 = &eth2;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	i2c2: m2-i2c {
		compatible = "i2c-gpio";
		status = "okay";
		gpios = <&fpga_bank0 11 0>, /* sda */
			<&fpga_bank0 10 0>; /* scl */
		#address-cells = <1>;
		#size-cells = <0>;
	};

	i2c3: sfp-i2c {
		compatible = "i2c-gpio";
		status = "okay";
		gpios = <&fpga_bank0 21 0>, /* sda */
			<&fpga_bank0 22 0>; /* scl */
		#address-cells = <1>;
		#size-cells = <0>;

		sfp1: at24c04@50 {
			compatible = "atmel,24c02";
			reg = <0x50>;
		};
	};

	leds {
		compatible = "gpio-leds";

		red-led {
			label = "red-led";
			gpios = <&fpga_bank0 4 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};

		green-led {
			label = "green-led";
			gpios = <&fpga_bank0 5 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "heartbeat";
		};

		blue-led {
			label = "blue-led";
			gpios = <&fpga_bank0 17 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		phy_0_led {
			label = "phy-0-led";
			gpios = <&fpga_bank0 6 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "f1072004.mdio-mii:00:1Gbps";
		};

		phy_1_led {
			label = "phy-1-led";
			gpios = <&fpga_bank0 7 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "f1072004.mdio-mii:01:1Gbps";
		};
	};

	memory {
		device_type = "memory";
		reg = <0x00000000 0x40000000>; /* 1024 MB */
	};

	soc {
		ranges = <MBUS_ID(0xf0, 0x01) 0 0xf1000000 0x100000
			  MBUS_ID(0x01, 0x1d) 0 0xfff00000 0x100000
			  MBUS_ID(0x09, 0x19) 0 0xf1100000 0x10000
			  MBUS_ID(0x09, 0x15) 0 0xf1110000 0x10000
			  MBUS_ID(0x0c, 0x04) 0 0xf1200000 0x100000>;

		internal-regs {
			/* We use M41T100 instead, not SOC RTC */
			rtc@a3800 {
				status = "disabled";
			};
		};
	};

	tsfpga_pcie: tsfpga-pcie {
		compatible = "technologic,ts78xx-mfd";
		#address-cells = <1>;
		#size-cells = <1>;

		interrupt-controller;
		#interrupt-cells = <1>;

		// Ideally this should be under the pcie bus 3 node
		// and sub devices could specify regs within these ranges
		// but it doesn't seem this works.
		ranges = <0 0xe4080000 0x1000>; // BAR0

		fpga_bank0: ts7820-gpio@0 {
			compatible = "technologic,ts7820-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			reg = <0x0 0x10>;
			status = "okay";
			/* Schematic or FPGA net names */
			gpio-line-names = "en_nimble_4v_pad",
				"en_nimble_3v3_pad",
				"en_emmc_3v3_pad",
				"en_sd_3v3_pad",
				"red_led_padn",
				"grn_led_padn",
				"phy_0_led_padn",
				"phy_1_led_padn",
				"i2c_0_clk_pad",
				"i2c_0_dat_pad",
				"m2_i2c_clk_pad",
				"m2_i2c_dat_pad",
				"spi_0_fpga_cs3_padn",
				"cpu_access_fpga_flash_padn",
				"use_7800_boot_flash_pad",
				"cpu_push_sw_padn",
				"en_usb_5v_pad",
				"blu_led_pad",
				"phy_1512_reset_padn",
				"en_wifi_pwr_pad",
				"wifi_reset_padn",
				"cage_sda_pad",
				"cage_scl_pad",
				"en_relay_1_pad",
				"en_relay_2_pad",
				"en_gps_3v3_pad",
				"spi_0_wifi_cs2_padn",
				"com_rts_pad",
				"com_txd_pad",
				"en_nim_usb_padn",
				"prog_silab_clk_padn",
				"prog_silab_data_padn";
		};

		fpga_uart0: fpga-uart0 {
			compatible = "ns16550a";
			reg = <0x80 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <0 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};

		fpga_uart1: fpga-uart1 {
			compatible = "ns16550a";
			reg = <0x88 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <1 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};

		fpga_uart2: fpga-uart2 {
			compatible = "ns16550a";
			reg = <0x90 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <2 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};

		fpga_uart3: fpga-uart3 {
			compatible = "ns16550a";
			reg = <0x98 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <3 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};

		fpga_uart4: fpga-uart4 {
			compatible = "ns16550a";
			reg = <0xa0 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <4 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};

		fpga_uart5: fpga-uart5 {
			compatible = "ns16550a";
			reg = <0xa8 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <5 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};

		fpga_uart6: fpga-uart6 {
			compatible = "ns16550a";
			reg = <0xb0 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <6 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};

		fpga_uart7: fpga-uart7 {
			compatible = "ns16550a";
			reg = <0xb8 8>;
			interrupt-parent = <&tsfpga_pcie>;
			interrupts = <7 IRQ_TYPE_EDGE_RISING>;
			clock-frequency = <1843200>;
			reg-io-width = <1>;
		};
	};
};

&ahci0 {
	status = "okay";
};

&bm {
	status = "okay";
};

&bm_bppi {
	status = "okay";
};

/* magjack/sfp port 0 */
&eth0 {
	pinctrl-names = "default";
	pinctrl-0 = <&ge0_rgmii_pins>;
	status = "okay";
	phy = <&phy0>;
	phy-mode = "rgmii-id";
	buffer-manager = <&bm>;
	bm,pool-long = <0>;
	bm,pool-short = <1>;
};

/* magjack/sfgp port 1 */
&eth1 {
	pinctrl-names = "default";
	pinctrl-0 = <&ge1_rgmii_pins>;
	status = "okay";
	phy = <&phy1>;
	phy-mode = "rgmii-id";
	bm,pool-long = <2>;
	bm,pool-short = <1>;
	buffer-manager = <&bm>;
};

/* sgmii port to eth switch */
&eth2 {
	status = "okay";
	phy-mode = "sgmii";
	bm,pool-long = <3>;
	bm,pool-short = <1>;
	buffer-manager = <&bm>;

	fixed-link {
		speed = <1000>;
		full-duplex;
	};
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	clock-frequency = <100000>;
	status = "okay";

	silabs_wdt: silabs-wdt@54 {
		compatible = "technologicsystems,ts7800v2-wdt";
		reg = <0x54>;
		status = "okay";
	};

	rtc1: m41t00s@68 {
		compatible = "m41t00";
		reg = <0x68>;
	};
};

&mdio {
	pinctrl-names = "default";
	pinctrl-0 = <&mdio_pins>;

	phy0: ethernet-phy@0 {
		reg = <0>;
		/* Configure LED[0] to blink for activity */
		marvell,reg-init = <3 16 0 0x1aa4>;
	};

	phy1: ethernet-phy@1 {
		reg = <1>;
		/* Configure LED[0] to blink for activity */
		marvell,reg-init = <3 16 0 0x1aa4>;
	};

	switch@2 {
		compatible = "marvell,mv88e6085";
		#address-cells = <1>;
		#size-cells = <0>;
		dsa,member = <0 0>;
		reg = <2>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			ports@0 {
				reg = <0>;
				label = "lan0";
			};

			ports@1 {
				reg = <1>;
				label = "lan1";
			};

			ports@2 {
				reg = <2>;
				label = "lan2";
			};

			ports@3 {
				reg = <3>;
				label = "lan3";
			};

			ports@4 {
				reg = <4>;
				label = "lan4";
			};

			port@5 {
				reg = <5>;
				label = "cpu";
				ethernet = <&eth2>;
				fixed-link {
					speed = <1000>;
					full-duplex;
				};
			};
		};
	};
};

&pciec {
	status = "okay";
};

&pcie2 {
	status = "okay";
};

&pcie3 {
	status = "okay";
};

&pinctrl {
	sdhci_pins0: sdhci-pins0 {
		marvell,pins = "mpp50", "mpp54", "mpp55",
			       "mpp57", "mpp58", "mpp59";
		marvell,function = "sd0";
	};

	wifi_gpio_pins: wifi-gpio-pins {
		marvell,pins = "mpp18"; /* WIFI_IRQ */
		marvell,function = "gpio";
		bias-pull-up;
	};
};

&sdhci {
	bus-width = <4>;
	no-1-8-v;
	pinctrl-0 = <&sdhci_pins0>;
	pinctrl-names = "default";
	status = "okay";
};	

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>, <&wifi_gpio_pins>;
	status = "okay";
	u-boot,dm-pre-reloc;
	num-cs = <3>;
	cs-gpios = <0>, <&fpga_bank0 13 0>, <&fpga_bank0 26 0>;

	/* Development boot flash.  Not onboard. */
	flash0: n25q064@0 {
		compatible = "micron,n25q064", "jedec,spi-nor";
		spi-max-frequency = <20000000>;
		reg = <0>;
		u-boot,dm-pre-reloc;
		status = "disabled";
	};

	/* FPGA Flash */
	flash1: is25lq016b@1 {
		compatible = "sst,is25lq016b,", "jedec,spi-nor";
		spi-max-frequency = <20000000>;
		reg = <1>;
		u-boot,dm-pre-reloc;
	};

	wilc_spi@0 {
		compatible = "microchip,wilc3000";
		reg = <2>;
		spi-max-frequency = <48000000>;
		irq-gpios = <&gpio0 18 0>;
		reset-gpios = <&fpga_bank0 20 0>;
		chip_en-gpios = <&fpga_bank0 19 0>;
		status = "okay";
	};
};

&uart0 {
	pinctrl-0 = <&uart0_pins>;
	pinctrl-names = "default";
	status = "okay";
	u-boot,dm-pre-reloc;
};

/* We use external watchdog */
&watchdog {
	status = "disabled";	
};

&usb0 {
	status = "okay";
};

&usb3_0 {
	status = "okay";	
};

&usb3_1 {
	status = "okay";	
};
